README file for FidoCadJ

Copyright 2007-2010 

by Davide Bucci

----------------
1 - Introduction
----------------

FidoCadJ is a very easy to use editor, with a library of electrical symbols 
and footprints (through hole and SMD). Drawings can be exported in several 
of graphic formats (PDF, EPS, PGF for LaTeX, SVG, PNG, JPG). Even if it is 
very simple and hence limited, it can be still considered an Electronic 
design automation (EDA) software. FidoCadJ is inspired from FidoCad 
(without "J"), which was a vector graphic editor useful for electrical 
schematics and printed circuit boards. It uses a file format containing 
only 7-bit ASCII text, very compact and suited for copy and pasting 
from/into newsgroups and forum messages. 
This determined its success among the italian Usenet community, from late 
'90s, as it is quite versatile for simple mechanical drawings as well. 
FidoCadJ is internationalized and its interface and manuals are available 
in english, french and italian.

First, a few useful sites about FidoCadJ:
http://tinyurl.com/yavewp2
http://sourceforge.net/projects/fidocadj/

-----------------------------------------------
2 - Files contained in this source distribution
-----------------------------------------------

In the following table you can find a description of the trunk directory of 
the FidoCadJ program.

File                        Comments
----------------------------------------------------------------------------
Manifest.txt                Manifest to be used for fidocadj.jar
Manifest_applet.txt         Manifest to be used for fidoreadj.jar
README                      This file
bin/                        Contains all compiled classes and resources         
busy being born/            Contains screenshots of old versions of FidoCadJ
clean                       erases all compiled classes
cleanall                    do a clean, erases fidocadj.jar, Javadocs
compile                     compile FidoCadJ
count                       do a wc on all Java source files                    
createdoc                   run Javadoc on all source files
createjar                   prepare fidocadj.jar
doc                         contains all Javadoc produced HTML files
gpl-3.0.txt                 the GNU public licence v. 3
icons/                      contains all icons (made with Gimp)
jar/                        contains fidocadj.jar as well as Quaqua
lib/                        contains the standard libraries
mac/                        contains some MacOSX specific files
manual/                     the LaTeX manuals
profile                     launch a profiler (jip)
rebuild                     do a clean and then runs FidoCadJ
run                         run FidoCadJ
src                         contains all the Java source files
exclude_from_svn			excludes all binary generated files from svn
sign.sh                     creates the signature for the applet

--------------------------------------------------
3 - Instruction on how to compile and run FidoCadJ
--------------------------------------------------

Ok, you just downloaded from SourceForge the archive containing the source 
files of FidoCadJ. Good :-)
FidoCadJ is a pure Java project, but for many reasons I prefer using a good
text editor as well as a few command line script in order to compile and run 
the code on which I am working.
For this reason, you find in the trunk directory (see section 2 of this 
file) several scripts which will be useful for you.
The instructions on how to compile depend on the operating system.

3.1 Compile and run the sources from a MacOSX operating system (>=1.3.9) 
------------------------------------------------------------------------

If you have MacOSX, you just open up a terminal window, go into the 
fidocadj/trunk directory and type:

./rebuild

And FidoCadJ should be automatically compiled and run.

3.2 Compile and run the sources from another operating system
-------------------------------------------------------------

If you type the ./rebuild command directly as described in section 3.1, you
will probably stumble in a lot of errors. The Java compiler is complaining 
that there are some Apple-stuff related classes which are not found.
You need to edit a little the following file:

fidocadj/trunk/src/FidoMain.java

You should search the following lines (around line 306 and something):

        // Probably, you need to strip this code if you need to compile the
        // program under a non-Apple platform.

        if(Globals.weAreOnAMac) {
            AppleSpecific a=new AppleSpecific();
            a.answerFinder();
        }

You should comment the code block as follows:

        // Probably, you need to strip this code if you need to compile the
        // program under a non-Apple platform.

/*      if(Globals.weAreOnAMac) {
            AppleSpecific a=new AppleSpecific();
            a.answerFinder();
        }		*/
        
And everything should compile fine.

3.3 Coding conventions
----------------------

The following coding conventions have been applied for the FidoCadJ source 
code:

- tab set to 4 spaces
- blocks delimited by curly braces are indented as follows:

    for(i=0; i<10; ++i) {   // starting brace here
        // indented code (4 spaces)
        System.out.println("I counted up to "+i);
    }	// close brace here at the same level of the 'if'
	
- methods are indented as follows
    void dummy (int i, int j) 
    {   // put the starting brace here
        System.out.println("Indent code");
    }   // put the closing brace here

- the class names are always capitalized, and so does methods
- an instance of the class does have its first letter in lower case
- each public class or method should be documented with Javadoc syntax

----------------
4 - Help wanted!
----------------

I am seeking for people interested in participating to the FidoCadJ project.
If you spot a typo (I am not a native English speakers), or an error in the 
manual or in the program, any correction is welcomed. I will be very happy 
to know what do you think about FidoCadJ. I am also searching for help: if 
you know Java and you want to work on the source code you will be welcomed.
If you do not know Java, you can participate by improving the manuals or 
translating the interface, or just can give an advice. 
Feel free to contact me at davbucciNOPE@tiscali.it, or in the SourceForge 
forums (the email address is valid without the nope part, but no 
attachments, please). It is probably better to open a discussion in the 
SourceForge forums, in order that the work can eventually be shared and
organized between all developers.

4.1 "I want to translate FidoCadJ in my language"
-------------------------------------------------

FidoCadJ is written in such a way that translating its interface is 
particularly easy and does not need to have programming abilities.
If you have downloaded the source file repository, you should find the 
resource files in the trunk/bin directory.
A language resource file has the name MessagesBundle_xx_YY.properties, where
xx and YY are respectively the code for the language and the country 
to which the translation is targeted.
If you have a look at the beginning of the file 
trunk/bin/MessagesBundle_en_US.properties, you should read something as 
follow:

File = File
New = New
Open = Open file
Save = Save
SaveName = Save as...
Export = Export
Print = Print
Close = Close

...

The resources string are organized in the form key = value. For example, here 
is the head of the corresponding file for the interface in French,

File = Fichier
New = Nouveau dessin
Open = Ouvre un fichier
Save = Enregistrer
SaveName = Enregistrer sous un autre nom
Export = Exporter
Print = Impression
Close = Fermer

...

That is all. If you want to translate FidoCadJ in your language, you just have
to translate line by line the values in a language resource file, name it 
accordingly to your locale and place it in the trunk/bin directory.
Pay attention that sometimes there are spaces at the end of the value 
strings which need to be kept in place.

4.2 I would like to participate to the coding activity
------------------------------------------------------

This is very nice from you. We will be happy for that. You can manifest 
yourself on the SourceForum forums dedicated to FidoCadJ and declare what are
your skills and basically what you would like to do. We will discuss a little
in order to see if we can find an intersecton with FidoCadJ development 
strategy. The idea is to keep work a little bit organized and know who does
what.

Once you decide what you want to do, you can run the Javadoc utility in order
to get a HTML description of all classes used in FidoCadJ. You will find that
useful to understand the underpinnings of the program. To do that, you can
run the trunk/createdoc sh script, if you are in a Unix system.

Then comes the hard work... We can help you! Please come to the SourceForge
forums dedicated to FidoCadJ!

--------------------
5 - I found a bug...
--------------------

Every program contains bugs and FidoCadJ is not an exception. Even if all 
the people involved in the development of FidoCadJ pay a lot of attention
at each release, some details could just go unnoticed.
If you ar familiar with the SourceForge interface, do not hesitate to
fill a bug report at the following address:

http://sourceforge.net/tracker/?group_id=274886&atid=1167996

If you feel unconfortable with the SourceForge system, please drop a few 
lines to davbucciNOPE@tiscali.it

-------------
6 - Licensing
-------------

FidoCadJ is distributed with the GPL v. 3 license:

    FidoCadJ is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    FidoCadJ is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FidoCadJ.  If not, see <http://www.gnu.org/licenses/>.
